generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider  = "postgresql"
   url       = env("POSTGRES_URL")
   directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
   id Int @id @default(autoincrement())

   fullName String
   email    String    @unique
   password String
   role     UserRole  @default(USER)
   verified DateTime?

   provider   String?
   providerId String?

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   carts             Cart?
   orders            Order[]
   varificationCodes VerificationCode?
}

model Category {
   id       Int       @id @default(autoincrement())
   name     String    @unique
   products Product[]

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Product {
   id Int @id @default(autoincrement())

   name        String
   searchQuery String
   imageUrl    String

   ingredients Ingredient[]

   category   Category? @relation(fields: [categoryId], references: [id])
   categoryId Int

   variation ProductVariation[]

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model ProductVariation {
   id Int @id @default(autoincrement())

   price     Int
   size      Int?
   pizzaType Int?

   product   Product    @relation(fields: [productId], references: [id])
   productId Int
   cartItems CartItem[]
}

model Ingredient {
   id Int @id @default(autoincrement())

   name     String
   price    Int
   imageUrl String

   products  Product[]
   cartItems CartItem[]

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Cart {
   id          Int    @id @default(autoincrement())
   totalAmount Int    @default(0)
   token       String

   items CartItem[]

   user   User? @relation(fields: [userId], references: [id])
   userId Int?  @unique

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model CartItem {
   id          Int          @id @default(autoincrement())
   quantity    Int          @default(1)
   ingredients Ingredient[]

   productVariation   ProductVariation @relation(fields: [productVariationId], references: [id])
   productVariationId Int

   cart   Cart @relation(fields: [cartId], references: [id])
   cartId Int

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Order {
   id Int @id @default(autoincrement())

   user   User? @relation(fields: [userId], references: [id])
   userId Int

   token String

   totalAmount Int
   status      OrderStatus
   paymentId   String?

   items Json

   fullName String
   address  String
   email    String
   phone    String
   comment  String?

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model VerificationCode {
   id Int @id @default(autoincrement())

   user   User? @relation(fields: [userId], references: [id])
   userId Int   @unique

   code String

   createdAt DateTime @default(now())

   @@unique([userId, code])
}

enum OrderStatus {
   PENDING
   SUCCESS
   CANCELLED
}

enum UserRole {
   USER
   ADMIN
}
